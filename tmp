# HG changeset patch
# User Fernando Jimenez <ferjmoreno@gmail.com>
# Parent  7b80399a8fcabec911a39e73add888ac6821bf37

diff --git a/dom/sync/SyncManagerChild.cpp b/dom/sync/SyncManagerChild.cpp
--- a/dom/sync/SyncManagerChild.cpp
+++ b/dom/sync/SyncManagerChild.cpp
@@ -1,18 +1,19 @@
 /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ts=8 sts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "SyncManagerChild.h"
 
+#include "mozilla/dom/Promise.h"
+#include "mozilla/ipc/PBackgroundChild.h"
 #include "mozilla/unused.h"
-#include "mozilla/ipc/PBackgroundChild.h"
 
 namespace mozilla {
 
 using namespace ipc;
 
 namespace dom {
 
 struct SyncManagerChild::PendingRequest final
diff --git a/dom/sync/SyncService.cpp b/dom/sync/SyncService.cpp
--- a/dom/sync/SyncService.cpp
+++ b/dom/sync/SyncService.cpp
@@ -1,14 +1,16 @@
 /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ts=8 sts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#include "mozilla/unused.h"
+#include "nsComponentManagerUtils.h"
 #include "SyncService.h"
 #include "SyncManagerParent.h"
 
 namespace mozilla {
 
 namespace dom {
 
 namespace {
@@ -93,17 +95,17 @@ bool
 SyncService::Register(const PrincipalInfo& aPrincipal,
                       const nsString& aScope,
                       const nsString& aTag)
 {
   // XXX implement me.
 
   //XXX REMOVE ME - Sync event test.
   for (auto iter = mServiceWorkerManagerActors.Iter(); !iter.Done(); iter.Next()) {
-    RefPtr<ServiceWorkerManagerParent> parent = iter.Get()->GetKey();
+    RefPtr<workers::ServiceWorkerManagerParent> parent = iter.Get()->GetKey();
     MOZ_ASSERT(parent);
     Unused << parent->SendNotifySyncEvent(aPrincipal, aScope, aTag, false);
   }
 
   return true;
 }
 
 void
diff --git a/dom/sync/SyncService.h b/dom/sync/SyncService.h
--- a/dom/sync/SyncService.h
+++ b/dom/sync/SyncService.h
@@ -2,33 +2,39 @@
 /* vim: set ts=8 sts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #ifndef mozilla_dom_SyncService_h
 #define mozilla_dom_SyncService_h
 
+#include "mozilla/ipc/BackgroundParent.h"
+
 #include "nsISupportsImpl.h"
 #include "nsISyncRegistry.h"
 #include "nsHashKeys.h"
 #include "nsTHashtable.h"
 #include "ServiceWorkerManagerParent.h"
 
+using mozilla::ipc::AssertIsOnBackgroundThread;
+
 namespace mozilla {
 namespace dom {
 
 namespace workers {
 class ServiceWorkerManagerParent;
 } // namespace workers
 
 class SyncManagerParent;
 
 class SyncService final
 {
+  typedef mozilla::ipc::PrincipalInfo PrincipalInfo;
+
 public:
   NS_INLINE_DECL_REFCOUNTING(SyncService)
 
   static already_AddRefed<SyncService> GetOrCreate();
 
   void RegisterActor(SyncManagerParent* aParent);
   void UnregisterActor(SyncManagerParent* aParent);
 
diff --git a/dom/sync/moz.build b/dom/sync/moz.build
--- a/dom/sync/moz.build
+++ b/dom/sync/moz.build
@@ -2,17 +2,17 @@
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 EXPORTS.mozilla.dom += [
     'SyncManager.h'
 ]
 
-UNIFIED_SOURCES += [
+SOURCES += [
     'SyncManager.cpp',
     'SyncManagerChild.cpp',
     'SyncManagerParent.cpp',
     'SyncService.cpp'
 ]
 
 IPDL_SOURCES += [
     'PSyncManager.ipdl',
