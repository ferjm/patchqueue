# HG changeset patch
# User Fernando Jimenez <ferjmoreno@gmail.com>
# Parent  6eec0566e752d824333456b9d0d1bf914b1637f1
try: -b do -p linux -u none -t none

diff --git a/dom/backgroundsync/ChromeStorageAction.h b/dom/backgroundsync/ChromeStorageAction.h
new file mode 100644
--- /dev/null
+++ b/dom/backgroundsync/ChromeStorageAction.h
@@ -0,0 +1,74 @@
+#ifndef mozilla_dom_ChromeStorageAction_h
+#define mozilla_dom_ChromeStorageAction_h
+
+namespace mozilla {
+namespace dom {
+namespace backgroundsync {
+
+class ChromeStorageAction final
+{
+public:
+  NS_INLINE_DECL_THREADSAFE_REFCOUNTING(ChromeStorageAction)
+
+  enum Type {
+    Register = 0,
+    Unregister,
+    GetAll
+  };
+
+  ChromeStorageAction(Type aType,
+                      const nsID& aRequestId)
+    : mType(aType)
+    , mRequestId(aRequestId)
+  {}
+
+  ChromeStorageAction(Type aType,
+                      const nsID& aRequestId,
+                      const nsAString& aOrigin)
+    : mType(aType)
+    , mRequestId(aRequestId)
+    , mOrigin(aOrigin)
+  {}
+
+  ChromeStorageAction(Type aType,
+                      const nsID& aRequestId,
+                      const Registration& aRegistration)
+    : mType(aType)
+    , mRequestId(aRequestId)
+    , mRegistration(aRegistration)
+  {}
+
+  Type Type()
+  {
+    return mType;
+  }
+
+  nsString& Origin()
+  {
+    return mOrigin;
+  }
+
+  nsID& RequestId()
+  {
+    return mRequestId;
+  }
+
+  Registration& GetRegistration()
+  {
+    return mRegistration;
+  }
+
+private:
+  ~ChromeStorageAction() {}
+
+  enum Type mType;
+  nsID mRequestId;
+  nsString mOrigin;
+  Registration mRegistration;
+};
+
+} // namespace backgroundsync
+} // namespace dom
+} // namespace mozilla
+
+#endif // mozilla_dom_ChromeStorageAction_h
diff --git a/dom/backgroundsync/ChromeStorageManager.cpp b/dom/backgroundsync/ChromeStorageManager.cpp
--- a/dom/backgroundsync/ChromeStorageManager.cpp
+++ b/dom/backgroundsync/ChromeStorageManager.cpp
@@ -19,77 +19,16 @@ namespace backgroundsync {
 using mozilla::ipc::AssertIsOnBackgroundThread;
 
 namespace {
   ChromeStorageManager* csmInstance = nullptr;
 } // namespace
 
 //-----------------------------------------------------------------------------
 
-class ChromeStorageAction
-{
-public:
-  NS_INLINE_DECL_THREADSAFE_REFCOUNTING(ChromeStorageAction)
-
-  enum class Type {
-    Register = 0,
-    Unregister,
-    GetAll
-  };
-
-  ChromeStorageAction(Type aType,
-                      const nsID& aRequestId)
-    : mType(aType)
-    , mRequestId(aRequestId)
-  {}
-
-  ChromeStorageAction(Type aType,
-                      const nsID& aRequestId,
-                      const nsAString& aOrigin)
-    : mType(aType)
-    , mRequestId(aRequestId)
-    , mOrigin(aOrigin)
-  {}
-
-  ChromeStorageAction(Type aType,
-                      const nsID& aRequestId,
-                      const Registration& aRegistration)
-    : mType(aType)
-    , mRequestId(aRequestId)
-    , mRegistration(aRegistration)
-  {}
-
-  Type Type()
-  {
-    return mType;
-  }
-
-  nsString& Origin()
-  {
-    return mOrigin;
-  }
-
-  nsID& RequestId()
-  {
-    return mRequestId;
-  }
-
-  Registration& GetRegistration()
-  {
-    return mRegistration;
-  }
-
-private:
-  ~ChromeStorageAction() {}
-
-  enum Type mType;
-  nsID mRequestId;
-  nsString mOrigin;
-  Registration mRegistration;
-};
 
 //-----------------------------------------------------------------------------
 // IO thread
 
 class InitRunnable final : public nsIRunnable,
                            public nsICancelableRunnable
 {
 public:
diff --git a/dom/backgroundsync/ChromeStorageManager.h b/dom/backgroundsync/ChromeStorageManager.h
--- a/dom/backgroundsync/ChromeStorageManager.h
+++ b/dom/backgroundsync/ChromeStorageManager.h
@@ -12,25 +12,26 @@
  * content related storage request is on going, this object should be kept
  * alive. If no pending storage requests are in place, this object can be
  * released.
  **
  * It manages the chrome database that stores the origins that have pending
  * sync registrations.
  */
 
+#include "ChromeStorageAction.h"
+
 #include "mozilla/ipc/BackgroundParent.h"
 #include "mozilla/storage.h"
 #include "nsISupportsImpl.h"
 
 namespace mozilla {
 namespace dom {
 namespace backgroundsync {
 
-class ChromeStorageAction;
 class Registration;
 
 class ChromeStorageManager final
 {
   friend class InitRunnable;
   friend class StorageActionRunnable;
 
 public:
