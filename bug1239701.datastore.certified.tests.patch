# HG changeset patch
# User Fernando Jimenez <ferjmoreno@gmail.com>
# Parent  df1eca35e272363e56aa9f05343e773f689c35b6
Bug 1239701 - Datastore should allow us to define stores accessible just by certified apps. Tests. r=baku

diff --git a/dom/datastore/tests/file_app.template.webapp b/dom/datastore/tests/file_app.template.webapp
--- a/dom/datastore/tests/file_app.template.webapp
+++ b/dom/datastore/tests/file_app.template.webapp
@@ -1,10 +1,23 @@
 {
   "name": "Really Rapid Release (hosted)",
   "description": "Updated even faster than <a href='http://mozilla.org'>Firefox</a>, just to annoy slashdotters.",
   "launch_path": "/tests/dom/datastore/tests/TESTTOKEN",
   "icons": { "128": "default_icon" },
   "datastores-owned" : {
-    "foo" : { "access": "readwrite", "description" : "This store is called foo" },
-    "bar" : { "access": "readonly", "description" : "This store is called bar" }
+    "foo" : {
+      "access": "readwrite",
+      "certified-only": false,
+      "description" : "This store is called foo"
+      },
+    "bar" : {
+      "access": "readonly",
+      "certified-only": false,
+      "description" : "This store is called bar"
+    },
+    "foobar" : {
+      "access": "readonly",
+      "certified-only": true,
+      "description" : "This store is certified only"
+    }
   }
 }
diff --git a/dom/datastore/tests/file_bug976311.template.webapp b/dom/datastore/tests/file_bug976311.template.webapp
--- a/dom/datastore/tests/file_bug976311.template.webapp
+++ b/dom/datastore/tests/file_bug976311.template.webapp
@@ -1,12 +1,16 @@
 {
   "name": "Really Rapid Release (hosted)",
   "description": "Updated even faster than <a href='http://mozilla.org'>Firefox</a>, just to annoy slashdotters.",
   "launch_path": "/tests/dom/datastore/tests/TESTTOKEN",
   "icons": { "128": "default_icon" },
   "datastores-owned" : {
-    "foo" : { "access": "readwrite", "description" : "This store is called foo" }
+    "foo" : {
+      "access": "readwrite",
+      "description": "This store is called foo",
+      "certified-only": false
+    }
   },
   "datastores-access" : {
     "foo" : { "readonly": false, "description" : "This store is called foo" }
   }
 }
diff --git a/dom/datastore/tests/file_bug986056.template.webapp b/dom/datastore/tests/file_bug986056.template.webapp
--- a/dom/datastore/tests/file_bug986056.template.webapp
+++ b/dom/datastore/tests/file_bug986056.template.webapp
@@ -1,12 +1,16 @@
 {
   "name": "Really Rapid Release (hosted)",
   "description": "Updated even faster than <a href='http://mozilla.org'>Firefox</a>, just to annoy slashdotters.",
   "launch_path": "/tests/dom/datastore/tests/TESTTOKEN",
   "icons": { "128": "default_icon" },
   "datastores-owned" : {
-    "foo" : { "access": "readwrite", "description" : "This store is called foo" }
+    "foo" : {
+      "access": "readwrite",
+      "certified-only": false,
+      "description": "This store is called foo"
+    }
   },
   "datastores-access" : {
     "foo" : { "readonly": false, "description" : "This store is called foo" }
   }
 }
diff --git a/dom/datastore/tests/homescreenapp/app.list b/dom/datastore/tests/homescreenapp/app.list
new file mode 100644
--- /dev/null
+++ b/dom/datastore/tests/homescreenapp/app.list
@@ -0,0 +1,3 @@
+manifest.webapp
+index.html
+test.js
diff --git a/dom/datastore/tests/homescreenapp/app.zip b/dom/datastore/tests/homescreenapp/app.zip
new file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..abf783983dac0ff6ca50f1059dffada3b972ab03
GIT binary patch
literal 1008
zc$^FHW@Zs#U|`^2XlOI@I3b!pYa@_X$;iOK&mhB)o0ylGmRek*SDu=bSWple!pXoa
zAFwD)35ZK8xEUB(z5!K&4Vc=$laI-e$L055uG6OO=feXoC{LCU(wyzmxwGZl{gaHl
zWrbQ*vyXjttK(&Ok(qLb@!jOTk;lcaB^){tshY+wqTHd#7}QnF=Ia#c^r&a`tg@1?
zr(~2nS58>_b(Xxe^5WO~Y?2orpLy@ANX+HwtJdlNDb3e$U!NrMTINuv(4laROEpcM
zp7$q<=FLcZ#kDOk=Ywerd$O^K*%a4_#ZRyDZ%JJycl5sQ!QId2t9l;}NSC@70QdR2
zY%`A!lZALQfV_!7%mws$W?o8ag<eKUZVuSf%N4MCdUIgO$8x?-o`TR58Yj<ge7vbK
zfQ!paa%HEc0^5YhNs*H#XNgaWidi&aTKtj+A+y#cWTfO|<|Sk-=AYQSLfcR8l#WKA
zhMw29P%Xw)*G_ANZQ6XXouireYWvKr$y4SBaSAqVXb4J}&4_U8WMC|LcH5j~1Ulg}
z5VHf_S^|optYWZ3-GGjC!*por1V?XXLxI-!zqQ-;svIp{8Gc&qNR?L5#mOD*J7%6`
zd(5M9(`n+r^39RmV%xT#+++TEpO1Nfw65@n<ssjFZuPC_x}w~+fJg7aZiWrAe}b3G
zH59#AtW$nFTI1oX{FJFzloxPU<lTAqtmo)Pja|a6?o0WLxPHv7s@rjU&$N@XYnFVw
zw&KJ-GYNC8RntR~CoD?-7Z9iO>W1>k3A-<>`8@B-=9PigD#FznQW0Sa^Y+}0Zf7%X
zna94o(ZVT;Czos6TwkWi)(w10i>rE?)pu}A<P>_Y<9b@;M&jEW9)_NanpRds?|a^0
zd1<!R{0}_apX>9ibzdU<)5F*2y7<Y@k?z|<KQae+Gcw6B<4Wlg3?KkxGAwBXu`tp-
zD<s{cg(|Y4n28A4&|g3jIZ3fXk`x~EFe4h-yk$TN9__4<XvZ*&l?|kU83;cC=@(2O
F9sryEU0?tJ

diff --git a/dom/datastore/tests/homescreenapp/index.html b/dom/datastore/tests/homescreenapp/index.html
new file mode 100644
--- /dev/null
+++ b/dom/datastore/tests/homescreenapp/index.html
@@ -0,0 +1,9 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <title>Test for Bug 1239701</title>
+    <script src="test.js"></script>
+  </head>
+  <body>
+  </body>
+</html>
diff --git a/dom/datastore/tests/homescreenapp/manifest.webapp b/dom/datastore/tests/homescreenapp/manifest.webapp
new file mode 100644
--- /dev/null
+++ b/dom/datastore/tests/homescreenapp/manifest.webapp
@@ -0,0 +1,16 @@
+{
+  "name": "Privileged homescreen app that access datastores",
+  "launch_path": "/index.html",
+  "type": "privileged",
+  "role": "homescreen",
+  "datastores-access": {
+    "foobar" : {
+      "access": "readwrite",
+      "description" : "This store is called foobar"
+    },
+    "bar" : {
+      "access": "readonly",
+      "description" : "This store is called bar"
+    }
+  }
+}
diff --git a/dom/datastore/tests/homescreenapp/test.js b/dom/datastore/tests/homescreenapp/test.js
new file mode 100644
--- /dev/null
+++ b/dom/datastore/tests/homescreenapp/test.js
@@ -0,0 +1,21 @@
+function ok(aCondition, aMessage) {
+  if (aCondition) {
+    alert("OK: " + aMessage);
+  } else {
+    alert("KO: " + aMessage);
+  }
+}
+
+function ready() {
+  alert("READY");
+}
+
+navigator.getDataStores('foobar').then(stores => {
+  ok(stores.length == 0, 'Privileged should not get certified only ds');
+  return navigator.getDataStores('bar');
+}).then(stores => {
+  console.log('stores', stores[0]);
+  ok(stores.length == 1,
+     'Privileged homescreen should get non-certified only ds');
+  ready();
+});
diff --git a/dom/datastore/tests/homescreenapp/update.webapp b/dom/datastore/tests/homescreenapp/update.webapp
new file mode 100644
--- /dev/null
+++ b/dom/datastore/tests/homescreenapp/update.webapp
@@ -0,0 +1,17 @@
+{
+  "name": "Privileged homescreen app that access datastores",
+  "launch_path": "/index.html",
+  "type": "privileged",
+  "role": "homescreen",
+  "datastores-access": {
+    "foobar" : {
+      "access": "readonly",
+      "description" : "This store is called foobar"
+    },
+    "bar" : {
+      "access": "readonly",
+      "description" : "This store is called bar"
+    }
+  },
+  "package_path": "app.zip"
+}
diff --git a/dom/datastore/tests/homescreenapp/update.webapp^headers^ b/dom/datastore/tests/homescreenapp/update.webapp^headers^
new file mode 100644
--- /dev/null
+++ b/dom/datastore/tests/homescreenapp/update.webapp^headers^
@@ -0,0 +1,1 @@
+Content-Type: application/x-web-app-manifest+json
diff --git a/dom/datastore/tests/makehomescreenzip.sh b/dom/datastore/tests/makehomescreenzip.sh
new file mode 100755
--- /dev/null
+++ b/dom/datastore/tests/makehomescreenzip.sh
@@ -0,0 +1,6 @@
+#!/bin/sh
+
+rm homescreenapp/app.zip
+cd homescreenapp
+zip app.zip `cat app.list`
+cd ..
diff --git a/dom/datastore/tests/mochitest.ini b/dom/datastore/tests/mochitest.ini
--- a/dom/datastore/tests/mochitest.ini
+++ b/dom/datastore/tests/mochitest.ini
@@ -29,16 +29,17 @@ support-files =
   file_transactions.html
   file_basic_common.js
   file_sync_common.js
   file_bug1008044.html
   file_bug957086.html
   file_notify_system_message.html
   file_worker_close.html
   file_worker_close.js
+  homescreenapp/*
 
 [test_app_install.html]
 skip-if = toolkit == 'gonk' || (os == 'mac' && debug) # embed-apps doesn't work in the mochitest app, bug 1085575 for OSX debug
 [test_readonly.html]
 skip-if = (toolkit == 'android' && processor == 'x86') #x86 only bug 936226
 [test_basic.html]
 [test_basic_worker.html]
 [test_changes.html]
@@ -57,8 +58,9 @@ skip-if = (toolkit == 'android' && proce
 [test_oop_events.html]
 [test_transactions.html]
 [test_bug1008044.html]
 [test_bug957086.html]
 [test_bug1058108.html]
 [test_notify_system_message.html]
 skip-if = buildapp == 'b2g' || toolkit == 'android' || toolkit == 'win' #bug 1053662 - Timeout prone
 [test_worker_close.html]
+[test_homescreen_and_certified_only.html]
diff --git a/dom/datastore/tests/test_homescreen_and_certified_only.html b/dom/datastore/tests/test_homescreen_and_certified_only.html
new file mode 100644
--- /dev/null
+++ b/dom/datastore/tests/test_homescreen_and_certified_only.html
@@ -0,0 +1,201 @@
+<!DOCTYPE html>
+<html>
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=1239701
+-->
+<head>
+  <title>Test for Bug 1239701</title>
+  <script type="application/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css"/>
+</head>
+<body>
+
+<a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id={1239701}">Mozilla Bug {1239701}</a>
+<p id="display"></p>
+<div id="content" style="display: none">
+
+</div>
+<pre id="test">
+<script class="testbody" type="application/javascript;version=1.7">
+
+SimpleTest.waitForExplicitFinish();
+
+const gURL = 'http://mochi.test:8888/tests/dom/datastore/tests/';
+
+function finish() {
+  SimpleTest.finish();
+}
+
+function cbError(aEvent) {
+  ok(false, "Error callback invoked " +
+            aEvent.target.error.name + " " + aEvent.target.error.message);
+  finish();
+}
+
+let homescreen = null;
+let dsOwner = null;
+
+function installPackage(path) {
+  return new Promise((resolve, reject) => {
+    let request = navigator.mozApps.installPackage(gURL + path);
+    request.onerror = () => {
+      ok(false, request.error.name);
+      reject();
+    };
+    request.onsuccess = () => {
+      let app = request.result;
+      ok(app, "App is not null");
+      if (app.installState == "installed") {
+        return resolve(app);
+      }
+      app.ondownloadapplied = () => {
+        resolve(app);
+      };
+      app.ondownloaderror = () => {
+        ok(false, "Unexpected download error");
+        reject();
+      };
+    };
+  });
+}
+
+function installApp(path) {
+  return new Promise((resolve, reject) => {
+    let request = navigator.mozApps.install(gURL + path);
+    request.onerror = () => {
+      ok(false, request.error.name);
+      reject();
+    };
+    request.onsuccess = () => {
+      let app = request.result;
+      ok(app, "App is not null");
+      if (app.installState == "installed") {
+        return resolve(app);
+      }
+    };
+  });
+}
+
+function launchApp(app) {
+  if (!app) {
+    ok(false, "No app to launch");
+    return Promise.reject();
+  }
+  return new Promise((resolve, reject) => {
+    let iframe = document.createElement("iframe");
+    iframe.setAttribute("mozbrowser", "true");
+    iframe.setAttribute("mozapp", app.manifestURL);
+    iframe.addEventListener("mozbrowsershowmodalprompt", e => {
+      let message = e.detail.message;
+      if (/OK/.exec(message)) {
+        ok(true, "Message from app: " + message);
+      } else if (/KO/.exec(message)) {
+        ok(false, "Message from app: " + message);
+      } else if (/READY/.exec(message)) {
+        ok(true, "Message from app: " + message);
+        resolve();
+      } else {
+        ok(false, "Unexpected message received: " + message);
+      }
+    }, false);
+    let domParent = document.getElementById("container");
+    domParent.appendChild(iframe);
+    SpecialPowers.wrap(iframe.contentWindow).location =
+      app.origin + app.manifest.launch_path;
+  });
+}
+
+const tests = [() => {
+  info("Test start");
+  SpecialPowers.setAllAppsLaunchable(true);
+  SpecialPowers.autoConfirmAppInstall(() => {
+    SpecialPowers.autoConfirmAppUninstall(next);
+  });
+}, () => {
+  info("Installing homescreen app");
+  installPackage("homescreenapp/update.webapp").then(app => {
+    homescreen = app;
+    next();
+  }).catch(() => {
+    ok(false, "Unable to install app");
+    finish();
+  });
+}, () => {
+  info("Installing datastore owner app");
+  installApp("file_app.sjs?testToken=file_app_install.html").then(app => {
+    ok(true, "App owner installed", app.manifestURL);
+    dsOwner = app;
+    next();
+  }).catch(() => {
+    ok(false, "Unable to install app");
+    finish();
+  });
+}, () => {
+  info("Setting dom.mozApps.homescreenURL to " + homescreen.manifestURL);
+  SpecialPowers.pushPrefEnv({
+    "set": [
+      ["dom.mozApps.homescreenURL", homescreen.manifestURL]
+    ]
+  }, next);
+}, () => {
+  info("Launching " + homescreen.manifest.name);
+  launchApp(homescreen).then(next);
+}, () => {
+  navigator.mozApps.mgmt.onuninstall = event => {
+    next();
+  };
+  let request = navigator.mozApps.mgmt.uninstall(homescreen);
+  request.onerror = cbError;
+}, () => {
+  navigator.mozApps.mgmt.onuninstall = event => {
+    next();
+  };
+  let request = navigator.mozApps.mgmt.uninstall(dsOwner);
+  request.onerror = cbError;
+}];
+
+const next = () => {
+  let step = tests.shift();
+  if (!step) {
+    return finish();
+  }
+  try {
+    step();
+  } catch(e) {
+    ok(false, "Test threw: " + e);
+  }
+}
+
+SpecialPowers.pushPermissions([{
+  "type": "webapps-manage",
+  "allow": 1,
+  "context": document
+}, {
+  "type": "browser",
+  "allow": 1,
+  "context": document
+}, {
+  "type": "embed-apps",
+  "allow": 1,
+  "context": document
+}], () => {
+  SpecialPowers.pushPrefEnv({
+    "set": [
+      // Dev mode to allow privileged app installation.
+      // It does not affect DS specific security checks.
+      ["dom.apps.developer_mode", true],
+      ["dom.datastore.enabled", true],
+      ["dom.testing.datastore_enabled_for_hosted_apps", true],
+      ["dom.testing.ignore_ipc_principal", true],
+      ["dom.mozApps.debug", true],
+      ["dom.mozBrowserFramesEnabled", true],
+      ["dom.sysmsg.enabled", true]
+    ]
+  }, next);
+});
+
+</script>
+<div id="container"></div>
+</pre>
+</body>
+</html>
